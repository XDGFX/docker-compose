version: "3.7"
services:

## --- ONLY NON VITAL / TESTING SERVICES HERE ---
## --- VITAL SERVICES GO IN vital-docker-compose.yml ---

# --- NETWORK SERVICES --- #
  apache: # {DOMAINNAME} frontend
    image: httpd
    container_name: apache-startpage
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/apache-startpage/data:/usr/local/apache2/htdocs/

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:${DOMAINNAME}"
      - "traefik.port=80"

      # SPECIAL CATCH ALL
      #- "traefik.frontend.rule=HostRegexp:{catchall:.*}"
      #- "traefik.frontend.priority=1"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


#  h5ai:
#    image: clue/h5ai
#    container_name: h5ai
#    restart: always
#
#    volumes:
#      - ${FILES_DIR}:/var/www
#
#    networks:
#      - traefik_proxy
#
#    labels:
#      # TRAEFIK ENABLE
#      - "traefik.enable=true"
#      - "traefik.frontend.rule=Host:files.${DOMAINNAME}"
#      - "traefik.port=80"
#
#      # AUTH BLOCK
#      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
#      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
#      - "traefik.frontend.auth.forward.trustForwardHeader=true"
#
#      # GENERAL SECURITY
#      - "traefik.frontend.headers.SSLRedirect=true"
#      - "traefik.frontend.headers.STSSeconds=315360000"
#      - "traefik.frontend.headers.browserXSSFilter=true"
#      - "traefik.frontend.headers.contentTypeNosniff=true"
#      - "traefik.frontend.headers.forceSTSHeader=true"
#      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
#      - "traefik.frontend.headers.STSIncludeSubdomains=true"
#      - "traefik.frontend.headers.STSPreload=true"
#      - "traefik.frontend.headers.frameDeny=true"


# --- DOCKER SERVICES --- #
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/storage/portainer/data:/data

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
      - "traefik.port=9000"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    command: --schedule "0 0 4 * * *" --cleanup

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


# --- MEDIA SERVER --- #
  plex:
    container_name: plex
    image: linuxserver/plex
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/plex/config:/config
      - /mnt/uluru/Media:/mnt/media

    environment:
      - PUID=${PUID}
      - PGID=${PGID}

    networks:
      - traefik_proxy

    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:plex.${DOMAINNAME}"
      - "traefik.port=32400"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/tautulli/config:/config

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:tautulli.${DOMAINNAME}"
      - "traefik.port=8181"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  deluge:
    image: linuxserver/deluge
    container_name: deluge
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/deluge/config:/config
      - ${DELUGE_TORRENTS_DIR}:/torrents
      - ${DELUGE_DOWNLOADS_DIR}:/downloads

    environment:
      - PUID=${PUID}
      - PGID=${PGID}

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:deluge.${DOMAINNAME}"
      - "traefik.port=8112"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/sonarr/config:/config
      - ${TV_DIR}:/tv
      - ${DELUGE_DOWNLOADS_DIR}:/downloads

    environment:
      - PUID=${PUID}
      - PGID=${PGID}

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
      - "traefik.port=8989"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/radarr/config:/config
      - ${FILMS_DIR}:/movies
      - ${DELUGE_DOWNLOADS_DIR}:/downloads

    environment:
      - PUID=${PUID}
      - PGID=${PGID}

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
      - "traefik.port=7878"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: always

    volumes:
      - ${USERDIR}/docker/storage/jackett/config:/config

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:jackett.${DOMAINNAME}"
      - "traefik.port=9117"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


# --- OTHER TOOLS --- #
#  crashplan:
#    image: jlesage/crashplan-pro
#    container_name: crashplan
#    restart: always
#
#    volumes:
#      - ${USERDIR}/docker/storage/crashplan/config:/config
#      - /mnt/uluru:/storage:ro
#
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#
#    networks:
#      - traefik_proxy
#
#    labels:
#      # TRAEFIK ENABLE
#      - "traefik.enable=true"
#      - "traefik.frontend.rule=Host:crashplan.${DOMAINNAME}"
#      - "traefik.port=5800"
#
#      # AUTH BLOCK
#      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
#      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
#      - "traefik.frontend.auth.forward.trustForwardHeader=true"
#
#      # GENERAL SECURITY
#      - "traefik.frontend.headers.SSLRedirect=true"
#      - "traefik.frontend.headers.STSSeconds=315360000"
#      - "traefik.frontend.headers.browserXSSFilter=true"
#      - "traefik.frontend.headers.contentTypeNosniff=true"
#      - "traefik.frontend.headers.forceSTSHeader=true"
#      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
#      - "traefik.frontend.headers.STSIncludeSubdomains=true"
#      - "traefik.frontend.headers.STSPreload=true"
#      - "traefik.frontend.headers.frameDeny=true"


  adminer:
    image: adminer
    container_name: adminer
    restart: always

    networks:
      - traefik_proxy

    labels:
      # TRAEFIK ENABLE
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:adminer.${DOMAINNAME}"
      - "traefik.port=8080"

      # AUTH BLOCK
      - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"

      # GENERAL SECURITY
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


  unifi-controller:
    restart: always
    image: linuxserver/unifi-controller
    container_name: unifi-controller

    volumes:
      - ${USERDIR}/docker/storage/unifi-controller/config:/config

    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
      - 6789:6789


# --- GAME SERVERS --- #
  papermc:
    image: felixklauke/paperspigot:1.14.4
    container_name: papermc
    stdin_open: true
    tty: true
    restart: always

    networks:
      - default

    ports:
      - 25565:25565

    volumes:
      - ${USERDIR}/docker/storage/papermc/config:/opt/minecraft/config
      - ${USERDIR}/docker/storage/papermc/worlds:/opt/minecraft/worlds
      - ${USERDIR}/docker/storage/papermc/plugins:/opt/minecraft/plugins
      - ${USERDIR}/docker/storage/papermc/data:/opt/minecraft/data
      - ${USERDIR}/docker/storage/papermc/logs:/opt/minecraft/logs


# --- END OF SERVICES --- #

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

# --- END OF NETWORKS --- #
