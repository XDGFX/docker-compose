version: "3.7"
services:

## --- SPECIAL SEPARATE docker-compose TO PROTECT AGAINST ---
## --- FAILED CONTAINERS TAKING DOWN VITAL SERVICES ---

# --- NETWORK SERVICES --- #

# Traefik 2 - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:v2.2
    restart: unless-stopped

    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      # - --entryPoints.traefik.address=:8080
      - --api=true
      - --api.insecure=true
      - --log=true
      - --log.level=ERROR # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
#      - --providers.file.filename=/path/to/file # Load dynamic configuration from a file.
      - --providers.file.watch=true # Only works on top level files in the rules folder
      # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --serversTransport.insecureSkipVerify=true # To allow unsigned https connections between Traefik and services

    networks:
      - traefik_proxy

    security_opt:
      - no-new-privileges:true

    ports:
      - 80:80
      - 443:443

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DOCKER_STORAGE}/traefik/rules:/rules 
      - ${DOCKER_STORAGE}/traefik/acme/acme.json:/acme.json 
      - ${DOCKER_STORAGE}/traefik/traefik.log:/traefik.log 
      - ${DOCKER_STORAGE}/shared:/shared

    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY

    labels:
      - "traefik.enable=true"

      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

     # HTTP Routers
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`traefik.$DOMAINNAME`)"
      - "traefik.http.routers.traefik.tls=true"

      - "traefik.http.routers.traefik.tls.domains[0].main=$DOMAINNAME"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.$DOMAINNAME"

      ## HTTP Services
      - "traefik.http.routers.traefik.service=api@internal"

      ## Middlewares
      - "traefik.http.routers.traefik.middlewares=chain-auth@file"


  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    container_name: traefik-forward-auth
    restart: always

    networks:
      - traefik_proxy

    environment:
      - CLIENT_ID=${TRAEFIK_CLIENT_ID}
      - CLIENT_SECRET=${TRAEFIK_CLIENT_SECRET}
      - SECRET=${TRAEFIK_SECRET}
      - OIDC_ISSUER=https://accounts.google.com
      - COOKIE_DOMAIN=${DOMAINNAME}
      - AUTH_HOST=auth.${DOMAINNAME}
      - WHITELIST=${TRAEFIK_WHITELIST}

    labels:
      - "traefik.enable=true"

      ## HTTP Routers
      - "traefik.http.routers.traefik-forward-auth.entryPoints=https"
      - "traefik.http.routers.traefik-forward-auth.rule=Host(`auth.${DOMAINNAME}`)"
      - "traefik.http.routers.traefik-forward-auth.tls=true"

      ## HTTP Services
      - "traefik.http.routers.traefik-forward-auth.service=traefik-forward-auth"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

      ## Middlewares
      - "traefik.http.routers.traefik-forward-auth.middlewares=chain-auth@file"


  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: always

    environment:
      - API_KEY=${CLOUDFLARE_DDNS_API_KEY}
      - ZONE=${DOMAINNAME}
      - PROXIED=false



# --- OTHER TOOLS --- #
  # guacd:
  #   image: "guacamole/guacd"
  #   container_name: guacd
  #   hostname: guacd
  #   restart: always

  #   networks:
  #     - traefik_proxy

  #   volumes:
  #     - "${DOCKER_STORAGE}/guacd/data:/data"
  #     - "${DOCKER_STORAGE}/guacd/conf:/conf:ro"

  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}


  # guacamole:
  #   image: "guacamole/guacamole"
  #   container_name: guacamole
  #   hostname: guacamole
  #   restart: always

  #   networks:
  #     - traefik_proxy

  #   volumes:
  #     - "${DOCKER_STORAGE}/guacamole/data:/data"
  #     - "${DOCKER_STORAGE}/guacamole/conf:/conf:ro"

  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - "GUACD_HOSTNAME=guacd"
  #     - "GUACD_PORT=4822"
  #     - "MYSQL_HOSTNAME=db"
  #     - "MYSQL_PORT=3306"
  #     - "MYSQL_DATABASE=guacamole"
  #     - "MYSQL_USER=guac"
  #     - "MYSQL_PASSWORD=${GUACDB_PASSWORD}"
  #     - "GUACAMOLE_HOME=/data"

  #   labels:
  #     # TRAEFIK ENABLE
  #     - "traefik.enable=true"
  #     - "traefik.frontend.rule=Host:guacamole.${DOMAINNAME};AddPrefix: /guacamole;"
  #     - "traefik.port=8080"

  #     # AUTH BLOCK
  #     - "traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181"
  #     - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
  #     - "traefik.frontend.auth.forward.trustForwardHeader=true"

  #     # GENERAL SECURITY
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=true"


  db:
    image: mariadb
    container_name: db
    restart: always

    networks:
      - traefik_proxy

    volumes:
      - ${DOCKER_STORAGE}/db:/var/lib/mysql

    environment:
      - PUID=${PUID}
      - PGID=${PGID}

# --- END OF SERVICES --- #

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

# --- END OF NETWORKS --- #
